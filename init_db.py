"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SQLite —Å —Ç–µ—Å—Ç–æ–≤—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
SQLite –Ω–µ —Ç—Ä–µ–±—É–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ - –≤—Å—Ç—Ä–æ–µ–Ω–∞ –≤ Python!
"""
from sqlalchemy.orm import Session
from database import SessionLocal, engine
from models import Base, User, Card, Transaction, Recommendation
from auth import get_password_hash

def create_tables():
    """–°–æ–∑–¥–∞–µ—Ç –≤—Å–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö SQLite"""
    Base.metadata.create_all(bind=engine)
    print("‚úÖ –¢–∞–±–ª–∏—Ü—ã SQLite —Å–æ–∑–¥–∞–Ω—ã")

def create_test_data():
    """–°–æ–∑–¥–∞–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ"""
    db = SessionLocal()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        if db.query(User).first():
            print("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç")
            return
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        test_user = User(
            phone="+79001234567",
            email="test@example.com",
            name="–¢–µ—Å—Ç–æ–≤—ã–π –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å",
            password_hash=get_password_hash("password123")
        )
        db.add(test_user)
        db.commit()
        db.refresh(test_user)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {test_user.name}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç—ã
        cards_data = [
            {
                "bank_name": "–°–±–µ—Ä–±–∞–Ω–∫",
                "card_name": "–°–±–µ—Ä–±–∞–Ω–∫ –ü—Ä–µ–º—å–µ—Ä",
                "last4": "1234",
                "cashback_rules": {"–µ–¥–∞": 5, "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç": 3, "–ø—Ä–æ—á–µ–µ": 1},
                "limit_monthly": 5000.0
            },
            {
                "bank_name": "–¢–∏–Ω—å–∫–æ—Ñ—Ñ",
                "card_name": "–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ü–ª–∞—Ç–∏–Ω—É–º",
                "last4": "5678",
                "cashback_rules": {"–µ–¥–∞": 3, "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç": 5, "–ø—Ä–æ—á–µ–µ": 2},
                "limit_monthly": 3000.0
            },
            {
                "bank_name": "–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫",
                "card_name": "–ê–ª—å—Ñ–∞-–ë–∞–Ω–∫ 100 –¥–Ω–µ–π",
                "last4": "9012",
                "cashback_rules": {"–µ–¥–∞": 2, "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç": 2, "–ø—Ä–æ—á–µ–µ": 5},
                "limit_monthly": 10000.0
            }
        ]
        
        for card_data in cards_data:
            card = Card(
                user_id=test_user.id,
                **card_data
            )
            db.add(card)
        
        db.commit()
        print("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ –∫–∞—Ä—Ç—ã")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        transactions_data = [
            {"card_id": 1, "amount": 1000.0, "category": "–µ–¥–∞", "cashback_earned": 50.0},
            {"card_id": 2, "amount": 500.0, "category": "—Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "cashback_earned": 25.0},
            {"card_id": 3, "amount": 2000.0, "category": "–ø—Ä–æ—á–µ–µ", "cashback_earned": 100.0}
        ]
        
        for trans_data in transactions_data:
            transaction = Transaction(
                user_id=test_user.id,
                **trans_data
            )
            db.add(transaction)
        
        db.commit()
        print("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        recommendations_data = [
            {"message": "–î–æ–±–∞–≤—å—Ç–µ –∫–∞—Ä—Ç—ã —Å –≤—ã—Å–æ–∫–∏–º –∫—ç—à–±—ç–∫–æ–º –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π —Ç—Ä–∞—Ç", "type": "—Å–æ–≤–µ—Ç"},
            {"message": "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–∞—Ä—Ç—É —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫—ç—à–±—ç–∫–æ–º –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ–∫—É–ø–∫–∏", "type": "—Å–æ–≤–µ—Ç"},
            {"message": "–ü—Ä–æ–≤–µ—Ä—è–π—Ç–µ –ª–∏–º–∏—Ç—ã –∫—ç—à–±—ç–∫–∞ –ø–µ—Ä–µ–¥ –∫—Ä—É–ø–Ω—ã–º–∏ –ø–æ–∫—É–ø–∫–∞–º–∏", "type": "—Å–æ–≤–µ—Ç"}
        ]
        
        for rec_data in recommendations_data:
            recommendation = Recommendation(
                user_id=test_user.id,
                **rec_data
            )
            db.add(recommendation)
        
        db.commit()
        print("‚úÖ –°–æ–∑–¥–∞–Ω—ã —Ç–µ—Å—Ç–æ–≤—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏")
        
        print("\nüéâ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö SQLite —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞!")
        print("üì± –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:")
        print("   –¢–µ–ª–µ—Ñ–æ–Ω: +79001234567")
        print("   –ü–∞—Ä–æ–ª—å: password123")
        print("üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: smartwallet.db (SQLite)")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö: {e}")
        db.rollback()
    finally:
        db.close()

if __name__ == "__main__":
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö SmartWallet (SQLite)...")
    create_tables()
    create_test_data()
